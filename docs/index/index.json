{
  "includedArchiveIdentifiers" : [
    "PoieticFlows"
  ],
  "interfaceLanguages" : {
    "swift" : [
      {
        "children" : [
          {
            "path" : "\/documentation\/poieticflows\/metamodel",
            "title" : "Stock and Flow Metamodel",
            "type" : "article"
          },
          {
            "path" : "\/documentation\/poieticflows\/formulas",
            "title" : "Formulas",
            "type" : "article"
          },
          {
            "children" : [
              {
                "title" : "Compiler and Compiled Model",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiler\/init(frame:)",
                    "title" : "init(frame: StableFrame)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiler\/frame",
                    "title" : "let frame: StableFrame",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiler\/hasissues",
                    "title" : "var hasIssues: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiler\/issues",
                    "title" : "var issues: [ObjectID : [ObjectIssue]]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiler\/statevariables",
                    "title" : "var stateVariables: [StateVariable]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiler\/view",
                    "title" : "let view: StockFlowView<StableFrame>",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiler\/compile()",
                    "title" : "func compile() throws(CompilerError) -> CompiledModel",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiler\/compilecontrolbindings()",
                    "title" : "func compileControlBindings() throws(CompilerError) -> [CompiledControlBinding]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiler\/compiledefaults()",
                    "title" : "func compileDefaults() throws(CompilerError) -> SimulationDefaults?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiler\/createstatevariable(content:valuetype:name:)",
                    "title" : "func createStateVariable(content: StateVariable.Content, valueType: ValueType, name: String) -> SimulationState.Index",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiler\/issues(for:)",
                    "title" : "func issues(for: ObjectID) -> [ObjectIssue]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiler\/validateparameters(_:required:)",
                    "title" : "func validateParameters(ObjectID, required: [String]) -> [ObjectIssue]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/compiler",
                "title" : "Compiler",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledmodel\/builtins",
                    "title" : "let builtins: [CompiledBuiltin]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledmodel\/charts",
                    "title" : "let charts: [Chart]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledmodel\/graphicalfunctions",
                    "title" : "var graphicalFunctions: [CompiledGraphicalFunction]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledmodel\/simulationdefaults",
                    "title" : "var simulationDefaults: SimulationDefaults?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledmodel\/simulationobjects",
                    "title" : "let simulationObjects: [SimulationObject]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledmodel\/statevariables",
                    "title" : "let stateVariables: [StateVariable]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledmodel\/stockindices",
                    "title" : "var stockIndices: [SimulationState.Index]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledmodel\/stocks",
                    "title" : "let stocks: [CompiledStock]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledmodel\/timevariableindex",
                    "title" : "let timeVariableIndex: SimulationState.Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledmodel\/valuebindings",
                    "title" : "let valueBindings: [CompiledControlBinding]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledmodel\/simulationobject(_:)",
                    "title" : "func simulationObject(ObjectID) -> SimulationObject?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledmodel\/stockindex(_:)",
                    "title" : "func stockIndex(ObjectID) -> NumericVector.Index",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledmodel\/variable(named:)",
                    "title" : "func variable(named: String) -> SimulationObject?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledmodel\/variableindex(of:)",
                    "title" : "func variableIndex(of: ObjectID) -> SimulationState.Index?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/compiledmodel",
                "title" : "CompiledModel",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowview\/init(_:)",
                    "title" : "init(StockFlowView<F>.ViewedFrame)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowview\/drainsedges",
                    "title" : "var drainsEdges: [EdgeSnapshot]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowview\/fillsedges",
                    "title" : "var fillsEdges: [EdgeSnapshot]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowview\/flownodes",
                    "title" : "var flowNodes: [F.Node]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowview\/frame",
                    "title" : "let frame: StockFlowView<F>.ViewedFrame",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowview\/metamodel",
                    "title" : "let metamodel: Metamodel",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowview\/parameteredges",
                    "title" : "var parameterEdges: [EdgeSnapshot]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowview\/simulationnodes",
                    "title" : "var simulationNodes: [F.Node]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowview\/builtinreferences(names:)",
                    "title" : "func builtinReferences(names: [String : ObjectID]) -> [String : StateVariable.Content]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowview\/drains(_:)",
                    "title" : "func drains(ObjectID) -> Neighborhood<StockFlowView<F>.ViewedFrame>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowview\/fills(_:)",
                    "title" : "func fills(ObjectID) -> Neighborhood<StockFlowView<F>.ViewedFrame>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowview\/flowdrains(_:)",
                    "title" : "func flowDrains(ObjectID) -> ObjectID?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowview\/flowfills(_:)",
                    "title" : "func flowFills(ObjectID) -> ObjectID?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowview\/incomingparameters(_:)",
                    "title" : "func incomingParameters(ObjectID) -> Neighborhood<StockFlowView<F>.ViewedFrame>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowview\/inflows(_:)",
                    "title" : "func inflows(ObjectID) -> Neighborhood<StockFlowView<F>.ViewedFrame>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowview\/objectvariablereferences(names:)",
                    "title" : "func objectVariableReferences(names: [String : ObjectID]) -> [String : StateVariable.Content]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowview\/outflows(_:)",
                    "title" : "func outflows(ObjectID) -> Neighborhood<StockFlowView<F>.ViewedFrame>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowview\/parameters(_:required:)",
                    "title" : "func parameters(ObjectID, required: [String]) -> [String : ParameterStatus]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowview\/stockadjacencies()",
                    "title" : "func stockAdjacencies() -> [StockAdjacency]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowview\/stockinflows(_:)",
                    "title" : "func stockInflows(ObjectID) -> [ObjectID]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowview\/stockoutflows(_:)",
                    "title" : "func stockOutflows(ObjectID) -> [ObjectID]",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowview\/viewedframe",
                    "title" : "StockFlowView.ViewedFrame",
                    "type" : "typealias"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/stockflowview",
                "title" : "StockFlowView",
                "type" : "class"
              },
              {
                "title" : "Compiled Model Components",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/builtinvariable\/step",
                    "title" : "case step",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/builtinvariable\/time",
                    "title" : "case time",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/builtinvariable\/timedelta",
                    "title" : "case timeDelta",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/builtinvariable\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/builtinvariable\/name",
                    "title" : "var name: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/builtinvariable\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/builtinvariable\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/builtinvariable",
                "title" : "BuiltinVariable",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/chart\/init(node:series:)",
                    "title" : "init(node: StableObject, series: [StableObject])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/chart\/node",
                    "title" : "let node: StableObject",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/chart\/series",
                    "title" : "let series: [StableObject]",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/chart",
                "title" : "Chart",
                "type" : "struct"
              },
              {
                "path" : "\/documentation\/poieticflows\/compiledbuiltin",
                "title" : "CompiledBuiltin",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledcontrolbinding\/control",
                    "title" : "let control: ObjectID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledcontrolbinding\/variableindex",
                    "title" : "let variableIndex: SimulationState.Index",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/compiledcontrolbinding",
                "title" : "CompiledControlBinding",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compileddelay\/initialvalue",
                    "title" : "let initialValue: Variant?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compileddelay\/initialvalueindex",
                    "title" : "let initialValueIndex: SimulationState.Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compileddelay\/inputvalueindex",
                    "title" : "let inputValueIndex: SimulationState.Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compileddelay\/queueindex",
                    "title" : "let queueIndex: SimulationState.Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compileddelay\/steps",
                    "title" : "let steps: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compileddelay\/valuetype",
                    "title" : "let valueType: AtomType",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/compileddelay",
                "title" : "CompiledDelay",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledsmooth\/inputvalueindex",
                    "title" : "let inputValueIndex: SimulationState.Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledsmooth\/smoothvalueindex",
                    "title" : "let smoothValueIndex: SimulationState.Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledsmooth\/windowtime",
                    "title" : "let windowTime: Double",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/compiledsmooth",
                "title" : "CompiledSmooth",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledgraphicalfunction\/function",
                    "title" : "let function: Function",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledgraphicalfunction\/id",
                    "title" : "let id: ObjectID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledgraphicalfunction\/parameterindex",
                    "title" : "let parameterIndex: SimulationState.Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledgraphicalfunction\/variableindex",
                    "title" : "let variableIndex: SimulationState.Index",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/compiledgraphicalfunction",
                "title" : "CompiledGraphicalFunction",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledstock\/allowsnegative",
                    "title" : "let allowsNegative: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledstock\/delayedinflow",
                    "title" : "let delayedInflow: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledstock\/id",
                    "title" : "let id: ObjectID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledstock\/inflows",
                    "title" : "let inflows: [SimulationState.Index]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledstock\/outflows",
                    "title" : "let outflows: [SimulationState.Index]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledstock\/variableindex",
                    "title" : "let variableIndex: SimulationState.Index",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/compiledstock",
                "title" : "CompiledStock",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/computationalrepresentation\/delay(_:)",
                    "title" : "case delay(CompiledDelay)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/computationalrepresentation\/formula(_:)",
                    "title" : "case formula(BoundExpression)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/computationalrepresentation\/graphicalfunction(_:_:)",
                    "title" : "case graphicalFunction(Function, SimulationState.Index)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/computationalrepresentation\/smooth(_:)",
                    "title" : "case smooth(CompiledSmooth)",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/computationalrepresentation\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/computationalrepresentation\/valuetype",
                    "title" : "var valueType: ValueType",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/computationalrepresentation",
                "title" : "ComputationalRepresentation",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationdefaults\/initialtime",
                    "title" : "let initialTime: Double",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationdefaults\/simulationsteps",
                    "title" : "let simulationSteps: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationdefaults\/timedelta",
                    "title" : "let timeDelta: Double",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/simulationdefaults",
                "title" : "SimulationDefaults",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationobject\/computation",
                    "title" : "let computation: ComputationalRepresentation",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationobject\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationobject\/id",
                    "title" : "let id: ObjectID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationobject\/name",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationobject\/type",
                    "title" : "let type: SimulationObject.SimulationObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationobject\/valuetype",
                    "title" : "var valueType: ValueType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationobject\/variableindex",
                    "title" : "let variableIndex: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/simulationobject\/simulationobjecttype\/auxiliary",
                        "title" : "case auxiliary",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/simulationobject\/simulationobjecttype\/flow",
                        "title" : "case flow",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/simulationobject\/simulationobjecttype\/stock",
                        "title" : "case stock",
                        "type" : "case"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/simulationobject\/simulationobjecttype\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticflows\/simulationobject\/simulationobjecttype\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/poieticflows\/simulationobject\/simulationobjecttype\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/simulationobject\/simulationobjecttype",
                    "title" : "SimulationObject.SimulationObjectType",
                    "type" : "enum"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/simulationobject",
                "title" : "SimulationObject",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/statevariable\/content-swift.property",
                    "title" : "let content: StateVariable.Content",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/statevariable\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/statevariable\/index",
                    "title" : "let index: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/statevariable\/kind-swift.property",
                    "title" : "var kind: StateVariable.Kind",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/statevariable\/name",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/statevariable\/objectid",
                    "title" : "var objectID: ObjectID?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/statevariable\/valuetype",
                    "title" : "let valueType: ValueType",
                    "type" : "property"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/statevariable\/content-swift.enum\/==(_:_:)",
                        "title" : "static func == (StateVariable.Content, StateVariable.Content) -> Bool",
                        "type" : "op"
                      },
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/statevariable\/content-swift.enum\/builtin(_:)",
                        "title" : "case builtin(BuiltinVariable)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/statevariable\/content-swift.enum\/internalstate(_:)",
                        "title" : "case internalState(ObjectID)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/statevariable\/content-swift.enum\/object(_:)",
                        "title" : "case object(ObjectID)",
                        "type" : "case"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/statevariable\/content-swift.enum\/description",
                        "title" : "var description: String",
                        "type" : "property"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticflows\/statevariable\/content-swift.enum\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/poieticflows\/statevariable\/content-swift.enum\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/statevariable\/content-swift.enum",
                    "title" : "StateVariable.Content",
                    "type" : "enum"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/statevariable\/kind-swift.enum\/builtin",
                        "title" : "case builtin",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/statevariable\/kind-swift.enum\/internalstate",
                        "title" : "case internalState",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/statevariable\/kind-swift.enum\/object",
                        "title" : "case object",
                        "type" : "case"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/statevariable\/kind-swift.enum\/init(rawvalue:)",
                        "title" : "init?(rawValue: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticflows\/statevariable\/kind-swift.enum\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/poieticflows\/statevariable\/kind-swift.enum\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticflows\/statevariable\/kind-swift.enum\/hashvalue",
                            "title" : "var hashValue: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticflows\/statevariable\/kind-swift.enum\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/poieticflows\/statevariable\/kind-swift.enum\/rawrepresentable-implementations",
                        "title" : "RawRepresentable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/statevariable\/kind-swift.enum",
                    "title" : "StateVariable.Kind",
                    "type" : "enum"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/statevariable",
                "title" : "StateVariable",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockadjacency\/id",
                    "title" : "let id: ObjectID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockadjacency\/origin",
                    "title" : "let origin: ObjectID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockadjacency\/target",
                    "title" : "let target: ObjectID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockadjacency\/targethasdelayedinflow",
                    "title" : "let targetHasDelayedInflow: Bool",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/stockadjacency",
                "title" : "StockAdjacency",
                "type" : "struct"
              },
              {
                "title" : "Systems",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/formulacompilersystem\/init()",
                    "title" : "init()",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/formulacompilersystem\/update(_:)",
                    "title" : "func update(RuntimeContext)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/formulacompilersystem",
                "title" : "FormulaCompilerSystem",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/parsedformulacomponent\/init(parsedformula:)",
                    "title" : "init(parsedFormula: UnboundExpression)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/parsedformulacomponent\/parsedformula",
                    "title" : "let parsedFormula: UnboundExpression",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/parsedformulacomponent\/attribute(forkey:)",
                    "title" : "func attribute(forKey: AttributeKey) -> Variant?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/parsedformulacomponent\/setattribute(value:forkey:)",
                    "title" : "func setAttribute(value: Variant, forKey: AttributeKey) throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/parsedformulacomponent",
                "title" : "ParsedFormulaComponent",
                "type" : "struct"
              },
              {
                "title" : "Errors",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compilererror\/attributeexpectationfailure(_:_:)",
                    "title" : "case attributeExpectationFailure(ObjectID, String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compilererror\/hasissues",
                    "title" : "case hasIssues",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compilererror\/objectnotfound(_:)",
                    "title" : "case objectNotFound(ObjectID)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compilererror\/structuretypemismatch(_:)",
                    "title" : "case structureTypeMismatch(ObjectID)",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/compilererror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/compilererror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/compilererror",
                "title" : "CompilerError",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/objectissue\/computationcycle",
                    "title" : "case computationCycle",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/objectissue\/duplicatename(_:)",
                    "title" : "case duplicateName(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/objectissue\/expressionerror(_:)",
                    "title" : "case expressionError(ExpressionError)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/objectissue\/expressionsyntaxerror(_:)",
                    "title" : "case expressionSyntaxError(ExpressionSyntaxError)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/objectissue\/flowcycle",
                    "title" : "case flowCycle",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/objectissue\/missingrequiredparameter",
                    "title" : "case missingRequiredParameter",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/objectissue\/unknownparameter(_:)",
                    "title" : "case unknownParameter(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/objectissue\/unsupporteddelayvaluetype(_:)",
                    "title" : "case unsupportedDelayValueType(ValueType)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/objectissue\/unusedinput(_:)",
                    "title" : "case unusedInput(String)",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/objectissue\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/objectissue\/hint",
                    "title" : "var hint: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/objectissue\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/objectissue\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/objectissue\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/objectissue\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/objectissue",
                "title" : "ObjectIssue",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/parameterstatus\/missing",
                    "title" : "case missing",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/parameterstatus\/unused(node:edge:)",
                    "title" : "case unused(node: ObjectID, edge: ObjectID)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/parameterstatus\/used(node:edge:)",
                    "title" : "case used(node: ObjectID, edge: ObjectID)",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/parameterstatus\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/parameterstatus\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/parameterstatus",
                "title" : "ParameterStatus",
                "type" : "enum"
              },
              {
                "title" : "Bound Expression",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/boundexpression",
                "title" : "BoundExpression",
                "type" : "typealias"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/boundvariable\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/boundvariable",
                "title" : "BoundVariable",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/expressionerror\/argumenttypemismatch(_:_:)",
                    "title" : "case argumentTypeMismatch(Int, String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/expressionerror\/invalidnumberofarguments(_:_:)",
                    "title" : "case invalidNumberOfArguments(Int, Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/expressionerror\/unknownfunction(_:)",
                    "title" : "case unknownFunction(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/expressionerror\/unknownvariable(_:)",
                    "title" : "case unknownVariable(String)",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/expressionerror\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/expressionerror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/expressionerror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/expressionerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/expressionerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/expressionerror",
                "title" : "ExpressionError",
                "type" : "enum"
              },
              {
                "path" : "\/documentation\/poieticflows\/bindexpression(_:variables:names:functions:)",
                "title" : "func bindExpression(UnboundExpression, variables: [StateVariable], names: [String : SimulationState.Index], functions: [String : Function]) throws(ExpressionError) -> BoundExpression",
                "type" : "func"
              }
            ],
            "path" : "\/documentation\/poieticflows\/compiledmodelandcompiler",
            "title" : "Compiled Model and Compiler",
            "type" : "symbol"
          },
          {
            "children" : [
              {
                "title" : "Simulation and Simulator",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowsimulation\/init(_:solver:)",
                    "title" : "init(CompiledModel, solver: StockFlowSimulation.SolverType)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowsimulation\/model",
                    "title" : "let model: CompiledModel",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowsimulation\/solver",
                    "title" : "var solver: StockFlowSimulation.SolverType",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowsimulation\/computestockdelta(_:in:)",
                    "title" : "func computeStockDelta(CompiledStock, in: inout SimulationState) throws -> Double",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowsimulation\/initialize(_:)",
                    "title" : "func initialize(inout SimulationState) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowsimulation\/initialize(delay:in:)",
                    "title" : "func initialize(delay: CompiledDelay, in: inout SimulationState) throws -> Variant",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowsimulation\/initialize(objectat:in:)",
                    "title" : "func initialize(objectAt: Int, in: inout SimulationState) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowsimulation\/initialize(smooth:in:)",
                    "title" : "func initialize(smooth: CompiledSmooth, in: inout SimulationState) throws -> Variant",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowsimulation\/stockdifference(state:time:)",
                    "title" : "func stockDifference(state: SimulationState, time: Double) throws -> NumericVector",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowsimulation\/update(_:)",
                    "title" : "func update(inout SimulationState) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowsimulation\/update(delay:in:)",
                    "title" : "func update(delay: CompiledDelay, in: inout SimulationState) throws -> Variant",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowsimulation\/update(objectat:in:)",
                    "title" : "func update(objectAt: Int, in: inout SimulationState) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowsimulation\/update(smooth:in:)",
                    "title" : "func update(smooth: CompiledSmooth, in: inout SimulationState) throws -> Variant",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowsimulation\/updatewitheuler(_:)",
                    "title" : "func updateWithEuler(inout SimulationState) throws -> NumericVector",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/stockflowsimulation\/updatewithrk4(_:)",
                    "title" : "func updateWithRK4(inout SimulationState) throws -> NumericVector",
                    "type" : "method"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/stockflowsimulation\/solvertype\/euler",
                        "title" : "case euler",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/stockflowsimulation\/solvertype\/rk4",
                        "title" : "case rk4",
                        "type" : "case"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/stockflowsimulation\/solvertype\/init(rawvalue:)",
                        "title" : "init?(rawValue: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticflows\/stockflowsimulation\/solvertype\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/poieticflows\/stockflowsimulation\/solvertype\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticflows\/stockflowsimulation\/solvertype\/hashvalue",
                            "title" : "var hashValue: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticflows\/stockflowsimulation\/solvertype\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/poieticflows\/stockflowsimulation\/solvertype\/rawrepresentable-implementations",
                        "title" : "RawRepresentable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/stockflowsimulation\/solvertype",
                    "title" : "StockFlowSimulation.SolverType",
                    "type" : "enum"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/stockflowsimulation\/evaluate(expression:with:)",
                        "title" : "func evaluate(expression: BoundExpression, with: SimulationState) throws -> Variant",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/stockflowsimulation\/simulation-implementations",
                    "title" : "Simulation Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/stockflowsimulation",
                "title" : "StockFlowSimulation",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/init(_:simulation:)",
                    "title" : "init(CompiledModel, simulation: (any Simulation)?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/compiledmodel",
                    "title" : "var compiledModel: CompiledModel",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/currentstate",
                    "title" : "var currentState: SimulationState!",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/currentstep",
                    "title" : "var currentStep: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/currenttime",
                    "title" : "var currentTime: Double",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/initialtime",
                    "title" : "var initialTime: Double",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/output",
                    "title" : "var output: [SimulationState]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/simulation",
                    "title" : "let simulation: any Simulation",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/timedelta",
                    "title" : "var timeDelta: Double",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/timepoints",
                    "title" : "var timePoints: [Double]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/dataseries(index:)",
                    "title" : "func dataSeries(index: Int) -> [Double]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/initializestate(time:override:)",
                    "title" : "func initializeState(time: Double?, override: [ObjectID : Double]) throws -> SimulationState",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/run(_:)",
                    "title" : "func run(Int) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/setbuiltins(_:)",
                    "title" : "func setBuiltins(inout SimulationState)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/step()",
                    "title" : "func step() throws",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/builtinvariables",
                    "title" : "static let BuiltinVariables: [Variable]",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/simulator",
                "title" : "Simulator",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationstate\/init(model:step:time:timedelta:)",
                    "title" : "init(model: CompiledModel, step: Int, time: Double, timeDelta: Double)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationstate\/init(values:step:time:timedelta:)",
                    "title" : "init(values: [Variant], step: Int, time: Double, timeDelta: Double)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationstate\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationstate\/step",
                    "title" : "let step: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationstate\/time",
                    "title" : "let time: Double",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationstate\/timedelta",
                    "title" : "let timeDelta: Double",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationstate\/values",
                    "title" : "var values: [Variant]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationstate\/advance(step:time:timedelta:)",
                    "title" : "func advance(step: Int?, time: Double?, timeDelta: Double?) -> SimulationState",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationstate\/double(at:)",
                    "title" : "func double(at: SimulationState.Index) -> Double",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationstate\/numericadd(_:atindices:)",
                    "title" : "func numericAdd(NumericVector, atIndices: [SimulationState.Index])",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationstate\/subscript(_:)",
                    "title" : "subscript(SimulationState.Index) -> Variant",
                    "type" : "subscript"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationstate\/index",
                    "title" : "SimulationState.Index",
                    "type" : "typealias"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/simulationstate",
                "title" : "SimulationState",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/*(_:_:)-402xh",
                    "title" : "static func * (Double, NumericVector) -> NumericVector",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/*(_:_:)-9sb44",
                    "title" : "static func * (NumericVector, Double) -> NumericVector",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/+(_:_:)",
                    "title" : "static func + (NumericVector, NumericVector) -> NumericVector",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/-(_:_:)",
                    "title" : "static func - (NumericVector, NumericVector) -> NumericVector",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/_(_:_:)",
                    "title" : "static func \/ (NumericVector, Double) -> NumericVector",
                    "type" : "op"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/init(_:)",
                    "title" : "init([Double])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/init(zerocount:)",
                    "title" : "init(zeroCount: Int)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/endindex",
                    "title" : "var endIndex: Array<Double>.Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/startindex",
                    "title" : "var startIndex: Array<Double>.Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/values",
                    "title" : "var values: [Double]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/adding(_:)",
                    "title" : "func adding(NumericVector) -> NumericVector",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/divided(by:)",
                    "title" : "func divided(by: Double) -> NumericVector",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/index(after:)",
                    "title" : "func index(after: NumericVector.Index) -> NumericVector.Index",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/multiplied(by:)",
                    "title" : "func multiplied(by: Double) -> NumericVector",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/subtracting(_:)",
                    "title" : "func subtracting(NumericVector) -> NumericVector",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/subscript(_:)",
                    "title" : "subscript(NumericVector.Index) -> Double",
                    "type" : "subscript"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/index",
                    "title" : "NumericVector.Index",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/last",
                        "title" : "var last: Self.Element?",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/difference(from:)",
                        "title" : "func difference<C>(from: C) -> CollectionDifference<Self.Element>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/difference(from:by:)",
                        "title" : "func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/droplast(_:)",
                        "title" : "func dropLast(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/firstrange(of:)-319xv",
                        "title" : "func firstRange<C>(of: C) -> Range<Self.Index>?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/formindex(before:)",
                        "title" : "func formIndex(before: inout Self.Index)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/last(where:)",
                        "title" : "func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/lastindex(of:)",
                        "title" : "func lastIndex(of: Self.Element) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/lastindex(where:)",
                        "title" : "func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/reversed()",
                        "title" : "func reversed() -> ReversedCollection<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/suffix(_:)",
                        "title" : "func suffix(Int) -> Self.SubSequence",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/numericvector\/bidirectionalcollection-implementations",
                    "title" : "BidirectionalCollection Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/count",
                        "title" : "var count: Int",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/first",
                        "title" : "var first: Self.Element?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/isempty",
                        "title" : "var isEmpty: Bool",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/underestimatedcount",
                        "title" : "var underestimatedCount: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/drop(while:)",
                        "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/dropfirst(_:)",
                        "title" : "func dropFirst(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/firstindex(of:)",
                        "title" : "func firstIndex(of: Self.Element) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/firstindex(where:)",
                        "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/firstrange(of:)-3lj26",
                        "title" : "func firstRange<C>(of: C) -> Range<Self.Index>?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/formindex(_:offsetby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/formindex(_:offsetby:limitedby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/formindex(after:)",
                        "title" : "func formIndex(after: inout Self.Index)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/index(of:)",
                        "title" : "func index(of: Self.Element) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/indices(of:)",
                        "title" : "func indices(of: Self.Element) -> RangeSet<Self.Index>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/indices(where:)",
                        "title" : "func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/makeiterator()",
                        "title" : "func makeIterator() -> IndexingIterator<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/map(_:)-8ai8o",
                        "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/prefix(_:)",
                        "title" : "func prefix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/prefix(through:)",
                        "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/prefix(upto:)",
                        "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/prefix(while:)",
                        "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/randomelement()",
                        "title" : "func randomElement() -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/randomelement(using:)",
                        "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/ranges(of:)",
                        "title" : "func ranges<C>(of: C) -> [Range<Self.Index>]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/removingsubranges(_:)",
                        "title" : "func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                        "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/split(separator:maxsplits:omittingemptysubsequences:)",
                        "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/suffix(from:)",
                        "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/trimmingprefix(_:)",
                        "title" : "func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/trimmingprefix(while:)",
                        "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/numericvector\/collection-implementations",
                    "title" : "Collection Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/index(_:offsetby:limitedby:)",
                        "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/numericvector\/randomaccesscollection-implementations",
                    "title" : "RandomAccessCollection Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/lazy",
                        "title" : "var lazy: LazySequence<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/publisher",
                        "title" : "var publisher: Publishers.Sequence<Self, Never>",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/allsatisfy(_:)",
                        "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/compactmap(_:)",
                        "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/compare(_:_:)",
                        "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/contains(_:)",
                        "title" : "func contains(Self.Element) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/contains(where:)",
                        "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/count(where:)",
                        "title" : "func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/elementsequal(_:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/elementsequal(_:by:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/enumerated()",
                        "title" : "func enumerated() -> EnumeratedSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/filter(_:)-2sb5x",
                        "title" : "func filter(Predicate<Self.Element>) throws -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/filter(_:)-3aagh",
                        "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/first(where:)",
                        "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/flatmap(_:)-2bzlk",
                        "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/flatmap(_:)-80l3w",
                        "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/foreach(_:)",
                        "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/formatted(_:)",
                        "title" : "func formatted<S>(S) -> S.FormatOutput",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/lexicographicallyprecedes(_:)",
                        "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/lexicographicallyprecedes(_:by:)",
                        "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/map(_:)-ttnw",
                        "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/max()",
                        "title" : "func max() -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/max(by:)",
                        "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/min()",
                        "title" : "func min() -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/min(by:)",
                        "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/reduce(_:_:)",
                        "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/reduce(into:_:)",
                        "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/shuffled()",
                        "title" : "func shuffled() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/shuffled(using:)",
                        "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/sorted()",
                        "title" : "func sorted() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/sorted(by:)",
                        "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/sorted(using:)-7yd1c",
                        "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/sorted(using:)-szeq",
                        "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/starts(with:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/starts(with:by:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/withcontiguousstorageifavailable(_:)",
                        "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/numericvector\/sequence-implementations",
                    "title" : "Sequence Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/numericvector",
                "title" : "NumericVector",
                "type" : "struct"
              },
              {
                "title" : "Formulas",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/builtinvariable\/step",
                    "title" : "case step",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/builtinvariable\/time",
                    "title" : "case time",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/builtinvariable\/timedelta",
                    "title" : "case timeDelta",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/builtinvariable\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/builtinvariable\/name",
                    "title" : "var name: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/builtinvariable\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/builtinvariable\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/builtinvariable",
                "title" : "BuiltinVariable",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/expressionerror\/argumenttypemismatch(_:_:)",
                    "title" : "case argumentTypeMismatch(Int, String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/expressionerror\/invalidnumberofarguments(_:_:)",
                    "title" : "case invalidNumberOfArguments(Int, Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/expressionerror\/unknownfunction(_:)",
                    "title" : "case unknownFunction(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/expressionerror\/unknownvariable(_:)",
                    "title" : "case unknownVariable(String)",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/expressionerror\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/expressionerror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/expressionerror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/expressionerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/expressionerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/expressionerror",
                "title" : "ExpressionError",
                "type" : "enum"
              },
              {
                "title" : "Functions",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/builtinunaryoperators",
                "title" : "let BuiltinUnaryOperators: [Function]",
                "type" : "var"
              },
              {
                "path" : "\/documentation\/poieticflows\/builtinbinaryoperators",
                "title" : "let BuiltinBinaryOperators: [Function]",
                "type" : "var"
              },
              {
                "path" : "\/documentation\/poieticflows\/builtinfunctions",
                "title" : "let BuiltinFunctions: [Function]",
                "type" : "var"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/graphicalfunction\/init(points:)",
                    "title" : "init(points: [Point])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/graphicalfunction\/createfunction(name:)",
                    "title" : "func createFunction(name: String) -> Function",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/graphicalfunction\/stepfunction(x:)",
                    "title" : "func stepFunction(x: Double) -> Double",
                    "type" : "method"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/graphicalfunction\/interpolationmethod\/step",
                        "title" : "case step",
                        "type" : "case"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/graphicalfunction\/interpolationmethod\/init(rawvalue:)",
                        "title" : "init?(rawValue: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticflows\/graphicalfunction\/interpolationmethod\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/poieticflows\/graphicalfunction\/interpolationmethod\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticflows\/graphicalfunction\/interpolationmethod\/hashvalue",
                            "title" : "var hashValue: Int",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticflows\/graphicalfunction\/interpolationmethod\/hash(into:)",
                            "title" : "func hash(into: inout Hasher)",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/poieticflows\/graphicalfunction\/interpolationmethod\/rawrepresentable-implementations",
                        "title" : "RawRepresentable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/graphicalfunction\/interpolationmethod",
                    "title" : "GraphicalFunction.InterpolationMethod",
                    "type" : "enum"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/graphicalfunction",
                "title" : "GraphicalFunction",
                "type" : "class"
              }
            ],
            "path" : "\/documentation\/poieticflows\/simulation",
            "title" : "Simulation and Computation",
            "type" : "symbol"
          },
          {
            "path" : "\/documentation\/poieticflows\/flowsmetamodel",
            "title" : "let FlowsMetamodel: Metamodel",
            "type" : "var"
          },
          {
            "title" : "Enumerations",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationerror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/simulationerror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticflows\/simulationerror",
            "title" : "SimulationError",
            "type" : "enum"
          },
          {
            "title" : "Extended Modules",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Extended Classes",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/metamodel\/stockflow",
                    "title" : "static let StockFlow: Metamodel",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/poieticcore\/metamodel",
                "title" : "Metamodel",
                "type" : "extension"
              },
              {
                "children" : [
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/objecttype\/auxiliary",
                    "title" : "static let Auxiliary: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/objecttype\/chart",
                    "title" : "static let Chart: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/objecttype\/chartseries",
                    "title" : "static let ChartSeries: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/objecttype\/control",
                    "title" : "static let Control: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/objecttype\/delay",
                    "title" : "static let Delay: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/objecttype\/drains",
                    "title" : "static let Drains: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/objecttype\/fills",
                    "title" : "static let Fills: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/objecttype\/flow",
                    "title" : "static let Flow: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/objecttype\/graphicalfunction",
                    "title" : "static let GraphicalFunction: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/objecttype\/note",
                    "title" : "static let Note: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/objecttype\/parameter",
                    "title" : "static let Parameter: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/objecttype\/scenario",
                    "title" : "static let Scenario: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/objecttype\/simulation",
                    "title" : "static let Simulation: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/objecttype\/smooth",
                    "title" : "static let Smooth: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/objecttype\/stock",
                    "title" : "static let Stock: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/objecttype\/valuebinding",
                    "title" : "static let ValueBinding: ObjectType",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/poieticcore\/objecttype",
                "title" : "ObjectType",
                "type" : "extension"
              },
              {
                "children" : [
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/trait\/auxiliary",
                    "title" : "static let Auxiliary: Trait",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/trait\/chart",
                    "title" : "static let Chart: Trait",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/trait\/computedvalue",
                    "title" : "static let ComputedValue: Trait",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/trait\/control",
                    "title" : "static let Control: Trait",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/trait\/delay",
                    "title" : "static let Delay: Trait",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/trait\/flow",
                    "title" : "static let Flow: Trait",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/trait\/formula",
                    "title" : "static let Formula: Trait",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/trait\/graphicalfunction",
                    "title" : "static let GraphicalFunction: Trait",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/trait\/simulation",
                    "title" : "static let Simulation: Trait",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/trait\/smooth",
                    "title" : "static let Smooth: Trait",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/trait\/stock",
                    "title" : "static let Stock: Trait",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/poieticcore\/trait",
                "title" : "Trait",
                "type" : "extension"
              },
              {
                "children" : [
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/variable\/simulationstepvariable",
                    "title" : "static let SimulationStepVariable: Variable",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/variable\/timedeltavariable",
                    "title" : "static let TimeDeltaVariable: Variable",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/variable\/timevariable",
                    "title" : "static let TimeVariable: Variable",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/poieticcore\/variable",
                "title" : "Variable",
                "type" : "extension"
              },
              {
                "title" : "Extended Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/arithmeticexpression\/valuetype",
                    "title" : "var valueType: ValueType",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/poieticcore\/arithmeticexpression",
                "title" : "ArithmeticExpression",
                "type" : "extension"
              }
            ],
            "path" : "\/documentation\/poieticflows\/poieticcore",
            "title" : "PoieticCore",
            "type" : "extension"
          }
        ],
        "path" : "\/documentation\/poieticflows",
        "title" : "PoieticFlows",
        "type" : "module"
      }
    ]
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 1,
    "patch" : 2
  }
}